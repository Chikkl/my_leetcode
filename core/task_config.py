import random
from typing import Any, List, Tuple

TASKS = [
    {
        "description": """
        Реализуйте асинхронную функцию process_data(data), которая:
        - Удаляет дубликаты
        - Сортирует в обратном порядке
        - Фильтрует значения > 10
        Пример: [15, 10, 20] → [20, 15]
        """,
        "examples": [
            ([15, 10, 20], [20, 15]),
            ([5, 10, 15, 15], [15]),
            ([11, 11, 11], [11]),
            ([1, 2, 3], []),
            ([100, 20, 30, 20, 10], [100, 30, 20]),
        ],
    },
    {
        "description": """
        Реализуйте асинхронную функцию process_data(data), которая:
        - Умножает все элементы на 2
        - Удаляет нечётные числа
        Пример: [1, 2, 3] → [4]
        """,
        "examples": [
            ([1, 2, 3], [4]),
            ([5, 6], [12]),
            ([0], [0]),
            ([7, 9], []),
            ([2, 4], [4, 8]),
        ],
    },
    {
        "description": """
        Реализуйте асинхронную функцию process_data(data), которая:
        - Возвращает сумму квадратов чётных чисел
        Пример: [1, 2, 3, 4] → 20
        """,
        "examples": [
            ([1, 2, 3, 4], 20),
            ([2, 2, 2], 12),
            ([1, 3, 5], 0),
            ([6], 36),
            ([0, 10], 100),
        ],
    },
]


def get_task() -> Tuple[str, List[Tuple[Any, Any]]]:
    """Выбирает случайное задание и возвращает описание и примеры."""
    task = random.choice(TASKS)
    global EXAMPLES
    EXAMPLES = task[
        "examples"
    ]  # Экспортируем глобально, чтобы logic.py мог использовать
    return task["description"], EXAMPLES
